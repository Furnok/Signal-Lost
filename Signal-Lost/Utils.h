#pragma once

#define _CRT_SECURE_NO_WARNINGS

#include <map>
#include <array>
#include <string_view>
#include <cctype>
#include <vector>

class Utils
{
public:
	void ClearConsole() const noexcept;

	void PosCursor(int posX, int posY) const noexcept;

	void DrawMainMenuTitle(const std::string_view& text, const int consoleWidth) const;

	void DrawGameTitle(const std::string_view& text, const int posX, const int posY) const;

	void DrawBox(int left, int top, int width, int height) const;

	void DrawMenuItems(const std::vector<std::string_view>& items, int left, int top);

	void DrawAscii(char ch, int posX, int posY) const;

private:
	inline static const std::map<char, std::array<std::string_view, 5>> ascii =
	{
		{ '0',
		{
			" ▄▄▄ ",
			"█  ▄█",
			"█ █ █",
			"█▀  █",
			" ▀▀▀ ",
		}},
		{ '1',
		{
			"  ▄  ",
			"▄▀█  ",
			"  █  ",
			"  █  ",
			"▀▀▀▀▀",
		}},
		{ '2',
		{
			" ▄▄▄ ",
			"▀   █",
			" ▄▀▀ ",
			"█   ▄",
			"▀▀▀▀▀",
		}},
		{ '3',
		{
			" ▄▄▄ ",
			"▀   █",
			"  ▀▀▄",
			"▄   █",
			" ▀▀▀ ",
		}},
		{ '4',
		{
			"   ▄▄",
			" ▄▀ █",
			"█▄▄▄█",
			"    █",
			"    ▀",
		}},
		{ '5',
		{
			"▄▄▄▄▄",
			"█    ",
			"▀▀▀▀▄",
			"▄   █",
			" ▀▀▀ ",
		}},
		{ '6',
		{
			"  ▄▄▄",
			"▄▀   ",
			"█▄▄▄ ",
			"█   █",
			" ▀▀▀ ",
		}},
		{ '7',
		{
			"▄▄▄▄▄",
			"▀   █",
			"  ▄▀ ",
			"  █  ",
			"  ▀  ",
		}},
		{ '8',
		{
			" ▄▄▄ ",
			"█   █",
			"▄▀▀▀▄",
			"█   █",
			" ▀▀▀ ",
		}},
		{ '9',
		{
			" ▄▄▄ ",
			"█   █",
			" ▀▀▀█",
			"   ▄▀",
			"▀▀▀  ",
		}},
		{ '-',
		{
			"     ",
			"     ",
			"▄▄▄▄▄",
			"     ",
			"     ",
		}},
		{ '%',
		{
			"▄   ▄",
			"   ▄▀",
			"  █  ",
			"▄▀   ",
			"▀   ▀",
		}},
		{ ' ',
		{
			"     ",
			"     ",
			"     ",
			"     ",
			"     ",
		}},
		{ 'A',
		{
			"  ▄  ",
			" █ █ ",
			"█▄▄▄█",
			"█   █",
			"▀   ▀",
		}},
		{ 'B',
		{
			"▄▄▄▄ ",
			"█   █",
			"█▀▀▀▄",
			"█   █",
			"▀▀▀▀ ",
		}},
		{ 'C',
		{
			" ▄▄▄ ",
			"█   ▀",
			"█    ",
			"█   ▄",
			" ▀▀▀ ",
		}},
		{ 'D',
		{
			"▄▄▄▄ ",
			"█   █",
			"█   █",
			"█   █",
			"▀▀▀▀ ",
		}},
		{ 'E',
		{
			"▄▄▄▄▄",
			"█    ",
			"█▀▀▀ ",
			"█    ",
			"▀▀▀▀▀",
		}},
		{ 'F',
		{
			"▄▄▄▄▄",
			"█    ",
			"█▀▀▀ ",
			"█    ",
			"▀    ",
		}},
		{ 'G',
		{
			" ▄▄▄ ",
			"█   ▀",
			"█  ▄▄",
			"█   █",
			" ▀▀▀ ",
		}},
		{ 'H',
		{
			"▄   ▄",
			"█   █",
			"█▀▀▀█",
			"█   █",
			"▀   ▀",
		}},
		{ 'I',
		{
			"▄▄▄▄▄",
			"  █  ",
			"  █  ",
			"  █  ",
			"▀▀▀▀▀",
		}},
		{ 'J',
		{
			"▄▄▄▄▄",
			"  █  ",
			"  █  ",
			"█ █  ",
			" ▀   ",
		}},
		{ 'K',
		{
			"▄   ▄",
			"█ ▄▀ ",
			"██   ",
			"█ ▀▄ ",
			"▀   ▀",
		}},
		{ 'L',
		{
			"▄    ",
			"█    ",
			"█    ",
			"█    ",
			"▀▀▀▀▀",
		}},
		{ 'M',
		{
			"▄   ▄",
			"██ ██",
			"█ █ █",
			"█   █",
			"▀   ▀",
		}},
		{ 'N',
		{
			"▄   ▄",
			"██  █",
			"█ █ █",
			"█  ██",
			"▀   ▀",
		}},
		{ 'O',
		{
			" ▄▄▄ ",
			"█   █",
			"█   █",
			"█   █",
			" ▀▀▀ ",
		}},
		{ 'P',
		{
			"▄▄▄▄ ",
			"█   █",
			"█▄▄▄▀",
			"█    ",
			"▀    ",
		}},
		{ 'Q',
		{
			" ▄▄▄ ",
			"█   █",
			"█   █",
			"█ ▀▄▀",
			" ▀▀ ▀",
		}},
		{ 'R',
		{
			"▄▄▄▄ ",
			"█   █",
			"█▀▀▀▄",
			"█   █",
			"▀   ▀",
		}},
		{ 'S',
		{
			" ▄▄▄▄",
			"█    ",
			" ▀▀▀▄",
			"▄   █",
			" ▀▀▀ ",
		}},
		{ 'T',
		{
			"▄▄▄▄▄",
			"  █  ",
			"  █  ",
			"  █  ",
			"  ▀  ",
		}},
		{ 'U',
		{
			"▄   ▄",
			"█   █",
			"█   █",
			"█   █",
			" ▀▀▀ ",
		}},
		{ 'V',
		{
			"▄   ▄",
			"█   █",
			"▀▄ ▄▀",
			" ▀▄▀ ",
			"  ▀  ",
		}},
		{ 'W',
		{
			"▄   ▄",
			"█   █",
			"█ █ █",
			"██ ██",
			"▀   ▀",
		}},
		{ 'X',
		{
			"▄   ▄",
			" █ █ ",
			"  █  ",
			" █ █ ",
			"▀   ▀",
		}},
		{ 'Y',
		{
			"▄   ▄",
			"▀▄ ▄▀",
			" ▀▄▀ ",
			"  █  ",
			"  ▀  ",
		}},
		{ 'Z',
		{
			"▄▄▄▄▄",
			"   ▄▀",
			"  █  ",
			"▄▀   ",
			"▀▀▀▀▀",
		}},
	};
};